% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/output.R
\name{write_tikz}
\alias{write_tikz}
\title{Write tikz drawing}
\usage{
write_tikz(tikz_text, path, tikz_library = NULL, tikz_style = NULL,
  tikz_picture = NULL, class_options = NULL, ..., density = 72)
}
\arguments{
\item{tikz_text}{<chr> Character string of tikz commands}

\item{path}{<chr> File name for drawing output}

\item{tikz_library}{<chr> A vector or character string of tikz libraries that
are required to compile the tikz drawing. Ex.
\code{c("calc", "fit", "shapes", "arrows")}}

\item{tikz_style}{<list> A named list of tikz style definitions, e.g.
\code{list(circle = "draw, ellipse")} will be converted to
\code{\tikzstyle{cloud} = [draw, ellipse]}.}

\item{tikz_picture}{<chr> A vector or character string of options to be
passed to the \code{\begin{tikzpicture}[...]} command.}

\item{class_options}{<chr> A vector of character string of options to be
passed to the \code{standalone} document class.}

\item{...}{Arguments passed on to \code{tinytex::latexmk}
\describe{
  \item{file}{A LaTeX file path.}
  \item{engine}{A LaTeX engine (can be set in the global option
\code{tinytex.engine}, e.g., \code{options(tinytex.engine = 'xelatex')}).}
  \item{bib_engine}{A bibliography engine (can be set in the global option
\code{tinytex.bib_engine}).}
  \item{engine_args}{Command-line arguments to be passed to \code{engine} (can
be set in the global option \code{tinytex.engine_args}, e.g.,
\code{options(tinytex.engine_args = '-shell-escape'}).}
  \item{emulation}{Whether to emulate the executable \command{latexmk} using R.}
  \item{max_times}{The maximum number of times to rerun the LaTeX engine when
using emulation. You can set the global option
\code{tinytex.compile.max_times}, e.g.,
\code{options(tinytex.compile.max_times = 3)}.}
  \item{install_packages}{Whether to automatically install missing LaTeX
packages found by \code{\link{parse_packages}()} from the LaTeX log. This
argument is only for the emulation mode and TeX Live.}
  \item{pdf_file}{Path to the PDF output file. By default, it is under the same
directory as the input \code{file} and also has the same base name.}
  \item{clean}{Whether to clean up auxiliary files after compilation (can be
set in the global option \code{tinytex.clean}, which defaults to
\code{TRUE}).}
}}

\item{density}{resolution to render raster image output via
\link[magick:image_write]{magick::image_write}}
}
\description{
Creates a tikz drawing from a simple document based on the \code{standalone} LaTeX
document class. Optionally converts to an image in the format specified by
the \code{path} extension.
}
\examples{
write_tikz("\\\\draw [step=0.5] (-1.4,-1.4) grid (1.4,1.4);",
           tempfile(fileext = ".pdf"))

}
